@page "/admin/orders"
@inherits OwningComponentBase<IPurchaseRepository>

<OrderTable TableTitle="Purchases Not Shipped" Purchases="PurchasesNotShipped"
               ButtonLabel="Not Shipped" OrderShipped="OrderShipped"></OrderTable>

<OrderTable TableTitle="Shipped Purchases" Purchases="PurchasesShipped"
               ButtonLabel="Reset" OrderShipped="ResetOrder"></OrderTable>

<button class="btn btn-info" @onclick="@(x => UpdateData())">Refresh Data</button>

@code {

    public IPurchaseRepository repo => Service;

    public IEnumerable<BookPurchase> AllPurchases { get; set; }
    public IEnumerable<BookPurchase> PurchasesNotShipped { get; set; }
    public IEnumerable<BookPurchase> PurchasesShipped { get; set; }

    protected async override Task OnInitializedAsync()
    {
        await UpdateData();
    }

    public async Task UpdateData()
    {
        AllPurchases = await repo.BookPurchases.ToListAsync();
        PurchasesNotShipped = AllPurchases.Where(x => !x.OrderShipped);
        PurchasesShipped = AllPurchases.Where(x => x.OrderShipped);
    }

    public void OrderShipped(int id) => UpdateOrder(id, true);
    public void ResetOrder(int id) => UpdateOrder(id, false);

    private void UpdateOrder(int id, bool shipped)
    {
        BookPurchase bp = repo.BookPurchases.FirstOrDefault(x => x.PurchaseId == id);
        bp.OrderShipped = shipped;
        repo.SavePurchase(bp);
    }

}